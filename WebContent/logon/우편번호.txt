******우편번호 체크로직.....
1.테이블을 만든다
   -테이블명 : zipcode
   -컬럼명 : zipcode, area1,area2,area3,area4
    create table zipcode(
	zipcode varchar2(7),
	area1 varchar2(20),
	area2 varchar2(40),
	area3 varchar2(40),
	area4 varchar2(120)
    )
   - zipcode.txt파일의 데이터를 입력....반드시 commit; 

2.저장빈클래스 작성
[ZipcodeBean.java]
package ez.logon;
public class ZipcodeBean {
private String zipcode;
private String area1;
private String area2;
private String area3;
private String area4;

public void setZipcode(String zipcode){
this.zipcode=zipcode;
}

public void setArea1(String area1){
this.area1=area1;
}

public void setArea2(String area2){
this.area2=area2;
}

public void setArea3(String area3){
this.area3=area3;
}

public void setArea4(String area4){
this.area4=area4;
}


    public String getZipcode(){
return zipcode;
}

    public String getArea1(){
return area1;
}
public String getArea2(){
return area2;
}
public String getArea3(){
return area3;
}
public String getArea4(){
return area4;
}
}

3.members테이블에 컬럼 추가
  alter table members
  add (zipcode varchar2(7),address varchar2(200));
  --zipcode varchar2(7) null
  --address varchar2(30) null

4.LogonDataBean에 프로퍼티 추가....
[LogonDataBean에.java]
private String zipcode;
private String address;

public String getAddress() {
return address;
}
public void setAddress(String address) {
this.address = address;
}
public String getZipcode() {
return zipcode;
}
public void setZipcode(String zipcode) {
this.zipcode = zipcode;
}

5.inputForm.jsp 수정
«%@ page contentType="text/html; charset=euc-kr"%» 
«%@ include file="../view/color.jsp"%»
«html»
«head»
«title»회원가입«/title»
«link href="style.css" rel="stylesheet" type="text/css"»
«script language="JavaScript"»
   
    function checkIt() {
        var userinput = eval("document.userinput");
        if(!userinput.id.value) {
            alert("ID를 입력하세요");
            return false;
        }
       
        if(!userinput.passwd.value ) {
            alert("비밀번호를 입력하세요");
            return false;
        }
        if(userinput.passwd.value != userinput.passwd2.value)
        {
            alert("비밀번호를 동일하게 입력하세요");
            return false;
        }
      
        if(!userinput.username.value) {
            alert("사용자 이름을 입력하세요");
            return false;
        }
        if(!userinput.jumin1.value  || !userinput.jumin2.value )
        {
            alert("주민등록번호를 입력하세요");
            return false;
        }
    }

    // 아이디 중복 여부를 판단
    function openConfirmid(userinput) {
        // 아이디를 입력했는지 검사
        if (userinput.id.value == "") {
            alert("아이디를 입력하세요");
            return;
        }
        // url과 사용자 입력 id를 조합합니다.
        url = "confirmId.jsp?id=" + userinput.id.value ;
       
        // 새로운 윈도우를 엽니다.
        open(url, "confirm",
        "toolbar=no, location=no,status=no,menubar=no,scrollbars=no,resizable=no,width=300, height=200");
    }
=================================================   추가
    function zipCheck(){
url="ZipCheck.jsp?check=y";
window.open(url,"post","toolbar=no ,width=500 ,height=300 ,directories=no,status=yes,scrollbars=yes,menubar=no");
    }
=================================================
«/script»


«body bgcolor="«%=bodyback_c%»"»

«form method="post" action="inputPro.jsp" name="userinput" onSubmit="return checkIt()"»
  «table width="600" border="1" cellspacing="0" cellpadding="3" align="center" »
    «tr»
    «td colspan="2" height="39" align="center" bgcolor="«%=value_c%»" »
       «font size="+1" »«b»회원가입«/b»«/font»«/td»
    «/tr»
    «tr»
      «td width="200" bgcolor="«%=value_c%»"»«b»아이디 입력«/b»«/td»
      «td width="400" bgcolor="«%=value_c%»"»&nbsp;«/td»
    «/tr» 

    «tr»
      «td width="200"» 사용자 ID«/td»
      «td width="400"»
        «input type="text" name="id" size="10" maxlength="12"»
        «input type="button" name="confirm_id" value="ID중복확인" OnClick="openConfirmid(this.form)"»
      «/td»
    «/tr»
    «tr»
      «td width="200"» 비밀번호«/td»
      «td width="400" »
        «input type="password" name="passwd" size="15" maxlength="12"»
      «/td»
    «tr» 
      «td width="200"»비밀번호 확인«/td»
      «td width="400"»
        «input type="password" name="passwd2" size="15" maxlength="12"»
      «/td»
    «/tr»
   
    «tr»
      «td width="200" bgcolor="«%=value_c%»"»«b»개인정보 입력«/b»«/td»
      «td width="400" bgcolor="«%=value_c%»"»&nbsp;«/td»
    «tr» 
    «tr»
      «td width="200"»사용자 이름«/td»
      «td width="400"»
        «input type="text" name="name" size="15" maxlength="10"»
      «/td»
    «/tr»
    «tr»
      «td width="200"»주민등록번호«/td»
      «td width="400"»
        «input type="text" name="jumin1" size="7" maxlength="6"»
        -«input type="text" name="jumin2" size="7" maxlength="7"»
      «/td»
    «/tr»
    «tr»
      «td width="200"»E-Mail«/td»
      «td width="400"»
        «input type="text" name="email" size="40" maxlength="30"»
      «/td»
    «/tr»
    «tr»
      «td width="200"» Blog«/td»
      «td width="400"»
        «input type="text" name="blog" size="60" maxlength="50"»
      «/td»
    «/tr»
================================================= 추가
    <tr> 
       <td width="200">우편번호</td>
       <td> <input type="text" name="zipcode" size="7">
               <input type="button" value="우편번호찾기" onClick="zipCheck()">
               우편번호를 검색 하세요.</td>
          </tr>
    <tr>
    <tr> 
       <td>주소</td>
       <td><input type="text" name="address" size="70">
       주소를 적어 주세요.</td>
    </tr>
=================================================
    «tr»
      «td colspan="2" align="center" bgcolor="«%=value_c%»"»
          «input type="submit" name="confirm" value="등   록" »
          «input type="reset" name="reset" value="다시입력"»
          «input type="button" value="가입안함" onclick="javascript:window.location='main.jsp'"»
      «/td»
    «/tr»
  «/table»
«/form»
«/body»
«/html»

6.LogonDBBean에 메소드 추가/수정
public void insertMember(LogonDataBean member) //수정
    throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;
       
        try {
            conn = getConnection();
           
            pstmt = conn.prepareStatement(
            "insert into MEMBERS(id,passwd,name,jumin1,jumin2,email" +
            ",blog,reg_date,zipcode,address) values (?,?,?,?,?,?,?,?,?,?)");
            pstmt.setString(1, member.getId());
            pstmt.setString(2, member.getPasswd());
            pstmt.setString(3, member.getName());
            pstmt.setString(4, member.getJumin1());
            pstmt.setString(5, member.getJumin2());
            pstmt.setString(6, member.getEmail());
            pstmt.setString(7, member.getBlog());
	    pstmt.setTimestamp(8, member.getReg_date());
pstmt.setString(9, member.getZipcode());
pstmt.setString(10, member.getAddress());
            pstmt.executeUpdate();
        } catch(Exception ex) {
            ex.printStackTrace();
        } finally {
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (conn != null) try { conn.close(); } catch(SQLException ex) {}
        }
    }

public Vector zipcodeRead(String area3)  { //추가
        Connection con = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        Vector vecList = new Vector();
        try {
            con = getConnection();
            String strQuery = "select * from zipcode where area3 like '"+area3+"%'";
            pstmt = con.prepareStatement(strQuery);
            rs = pstmt.executeQuery();
            while(rs.next()){
                ZipcodeBean tempZipcode = new ZipcodeBean();
                tempZipcode.setZipcode(rs.getString("zipcode"));
                tempZipcode.setArea1(rs.getString("area1"));
                tempZipcode.setArea2(rs.getString("area2"));
                tempZipcode.setArea3(rs.getString("area3"));
                tempZipcode.setArea4(rs.getString("area4"));
                vecList.addElement(tempZipcode);
            }

        }catch(Exception ex) {
            System.out.println("Exception" + ex);
        }finally {
            if (rs != null) try { rs.close(); } catch(SQLException ex) {}
            if (pstmt != null) try { pstmt.close(); } catch(SQLException ex) {}
            if (con != null) try { con.close(); } catch(SQLException ex) {}
        }
        return vecList;
    }

7.ZipCheck.jsp
«%@ page contentType="text/html;charset=EUC-KR" %»
«%@ page import="java.util.*,ez.logon.*" %»

«%
   request.setCharacterEncoding("euc-kr");

   String check = request.getParameter("check");
   String area3 = request.getParameter("area3");
   LogonDBBean manager = LogonDBBean.getInstance();  
   Vector zipcodeList = manager.zipcodeRead(area3);
   int totalList = zipcodeList.size();
%»
«html»
«head»
«title»우편번호검색«/title»
«link href="style.css" rel="stylesheet" type="text/css"»

«script»
function dongCheck(){
if (document.zipForm.area3.value == ""){
alert("동이름을 입력하세요");
document.zipForm.area3.focus();
return;
}
document.zipForm.submit();
}

function sendAddress(zipcode,area1,area2,area3,area4){
var address =area1+ " "+area2+ " " +area3+ " " +area4;
opener.document.userinput.zipcode.value=zipcode;
opener.document.userinput.address.value=address;
self.close();
}
«/script»
«/head»
«body bgcolor="#FFFFCC"»
«center»
«b»우편번호 찾기«/b»
«table»
«form name="zipForm" method="post" action="ZipCheck.jsp"»
      «tr»
        «td»«br»
          동이름 입력 : «input name="area3" type="text"»
          «input type="button" value="검색" onclick= "dongCheck();"»
        «/td»
      «/tr»
     «input type="hidden" name="check" value="n"»
    «/form»
«%
if(check.equals("n")){
%»
«%
   if (zipcodeList.isEmpty()) {
%»
   «tr»«td align="center"»«br»검색된 결과가 없습니다.«/td»«/tr»
«% }
else {
%»
«tr»«td align="center"»«br»
    ※검색 후, 아래 우편번호를 클릭하면 자동으로 입력됩니다.«/td»«/tr»
«%
for (int i=0;i«totalList;i++) {
ZipcodeBean zipBean = (ZipcodeBean)zipcodeList.elementAt(i);
String tempZipcode =zipBean.getZipcode();
String temptArea1 =zipBean.getArea1();
String temptArea2 =zipBean.getArea2();
String temptArea3 =zipBean.getArea3();
String temptArea4 =zipBean.getArea4();
%»
«tr»«td»
«a href="javascript:sendAddress('«%=tempZipcode%»','«%=temptArea1%»','«%=temptArea2%»','«%=temptArea3%»','«%=temptArea4%»')"»
         «%=tempZipcode%»&nbsp;«%=temptArea1%»&nbsp;«%=temptArea2%»&nbsp;
«%=temptArea3%»&nbsp;«%=temptArea4%»«/a»«br»
«%
}//for
}
%»
«%}%»
«/td»«/tr»
«tr»«td align="center"»«br»«a href="javascript:this.close();"»닫기«/a»«tr»«/td»
«/table»
«/center»
«/body»
«/html»